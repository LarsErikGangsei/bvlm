% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bvlm.R
\name{bvlm}
\alias{bvlm}
\title{Function for fitting linear regression model with bivariate response
 where one of the responses contains missing data.}
\usage{
bvlm(formula, data, method = "ML", hyper = NULL)
}
\arguments{
\item{formula}{an object of class "formula" (or one that can be coerced to
that class) a symbolic description of the model to be fitted.}

\item{data}{a data frame, list or environment (or object coercible
by as.data.frame to a data frame) containing the variables
in the model. The response variable should be a n1 x 2
matrix, where the last column could/ should contain missing
data (NA). Use the 'I()' notation to get a matrix in a data
frame like data <- data.frame(yy = I(),xx1 =,...)}

\item{method}{The method that should be used for tha analyses 'ML' (maximum
likelihood, default) or 'Bayes'}

\item{hyper}{Only if method is 'Bayes'. A list containing hyperparameters:
NULL (Default): Empirical bayes is used to set hyperparameters.
If not the following elements are to be implemented:
Psi1: a p x p symetric and positive definite matrix
Psi2: a p x p symetric and positive definite matrix
Phi : a 2 x 2 symetric and positive defenite matrix
phi3: a positive scalar (Optional, equal to Phi[1,1] as default)
zeta1: a scalar > 1.
zeta2: a scalar > 2.(Optional, equal to zeta_1 +1 as default)
Bet0: a p x 2 matrix of predictor variables}
}
\value{
an object of class "bvlm". The generic accessor functions
coefficients, fitted.values predict and residuals extract various
useful features of the value returned by bvlm.

An object of class "bvlm" is a list containing at least the following components:
}
\description{
Function for fitting linear regression model with bivariate response
 where one of the responses contains missing data.
}
\section{Fields}{

\describe{
\item{\code{formula:}}{the formula used in the function}

\item{\code{method:}}{'ML', 'Bayes', the method used for analysis}

\item{\code{coefficients:}}{a named list of coefficient estimates}

\item{\code{residuals:}}{the residuals, that is response minus fitted values.}

\item{\code{fitted.values:}}{the fitted mean values.}

\item{\code{gram:}}{A named list containg gram matrices and their inverse for the predictor}

\item{\code{quads:}}{A named list containing different quadratic sums.}

\item{\code{const:}}{A named list containing constants used in FIC prediction}

\item{\code{coefols:}}{Predictor estimates from OLS regression with full and reducet set of data.}

\item{\code{variable}}{matrices based on the full and reduset set of data.}

\item{\code{fisherinform:}}{the (2p+3) x (2p+3) observed fisherinformation evaluated
at the coeffeicients.}

\item{\code{likelihood:}}{The log likelihood when evaluatet at parameter estimates}

\item{\code{hyper:}}{Named list of prior parameters. Null if method is 'ML'}

\item{\code{posterior:}}{Named list of posterior parameters. Null if method is 'ML'}
}}

\examples{
# Simulate data
bvlm_excample <- bvlm_excampledata()

# Fit ML model
bvlmObj.ML <- bvlm(formula = 'Y ~ x1 + x2 + f1',
data=bvlm_excample$data,method='ML')
cbind(bvlm_excample$Parameters$Beta,bvlmObj.ML$coefficients$Beta)[,c(1,3,2,4)]# Compare true and estimated regression parameters
cbind(bvlm_excample$Parameters$Sigma,bvlmObj.ML$coefficients$Sigma)#Compare true and estimated error covariance matrix
cbind(bvlm_excample$Parameters$Lambda,bvlmObj.ML$coefficients$Lambda)#Compare true and estimated Lambda matrix

# Prediction
bvlmPrediction.TRUE <- model.matrix(lm('rep(0,100)~ x1 + x2 + f1',data = bvlm_excample$data_test))\%*\%bvlm_excample$Parameters$Beta# The true expected values
bvlmPrediction.ML <- predict_bvlm(bvlmObj.ML,newdata = bvlm_excample$data_test,ficpredict=FALSE)# Prediction on new data, using ML estimates
bvlmPrediction.FIC <- predict_bvlm(bvlmObj.ML,newdata = bvlm_excample$data_test,ficpredict=TRUE)# Prediction on new data, using FIC-prediction
plot(density(bvlmPrediction.TRUE[,2]-bvlmPrediction.FIC$ficfitted2[,1]),col='red',ylim = c(0,2),
main = 'Error densyties. Narrow (red), fic(blue) and ML(green)')
points(density(bvlmPrediction.TRUE[,2]-bvlmPrediction.FIC$fitted[,2]),col='blue',type = 'l')
points(density(bvlmPrediction.TRUE[,2]-bvlmPrediction.FIC$ficfitted2[,3]),col='green',type = 'l')

# RMSEP
rmsep <- c(sqrt(mean((bvlmPrediction.TRUE[,2]-bvlmPrediction.FIC$ficfitted2[,1])^2)),
sqrt(mean((bvlmPrediction.TRUE[,2]-bvlmPrediction.FIC$fitted[,2])^2)),
sqrt(mean((bvlmPrediction.TRUE[,2]-bvlmPrediction.FIC$ficfitted2[,3])^2)))
names(rmsep) <- c('Narrow','FIC','ML')
print(rmsep)

# Fit Empirical Bayes model
bvlmObj.EB <- bvlm(formula = 'Y ~ x1 + x2 + f1',data=bvlm_excample$data,method='Bayes')# Warnings uncentered data
bvlm_excample$data$Y <- scale(bvlm_excample$data$Y,center = TRUE,scale = FALSE)
bvlm_excample$data$x1 <- scale(bvlm_excample$data$x1,center = TRUE,scale = TRUE)
bvlm_excample$data$x2 <- scale(bvlm_excample$data$x2,center = TRUE,scale = TRUE)
bvlm_excample$data$x1 <- (bvlm_excample$data$x1 - attributes(bvlm_excample$data$x1)$`scaled:center`)/attributes(bvlm_excample$data$x1)$`scaled:scale`
bvlm_excample$data$x2 <- (bvlm_excample$data$x2 - attributes(bvlm_excample$data$x2)$`scaled:center`)/attributes(bvlm_excample$data$x2)$`scaled:scale`
bvlmObj.EB <- bvlm(formula = 'Y ~ x1 + x2 + f1',data=bvlm_excample$data,method='Bayes')# No warnings
bvlmObj.EB$coefficients$Beta[1,] <- bvlmObj.EB$coefficients$Beta[1,] + attributes(bvlm_excample$data$Y)$`scaled:center`

# RMSEP against simulated Y
rmsep <- c(sqrt(mean((bvlm_excample$data_test$Y[,2]-predict_bvlm(bvlmObj.EB,newdata = bvlm_excample$data_test)$fitted[,2])^2)),
sqrt(mean((bvlm_excample$data_test$Y[,2]-bvlmPrediction.FIC$fitted[,2])^2)),
sqrt(mean((bvlm_excample$data_test$Y[,2]-bvlmPrediction.ML$fitted[,2])^2)))
names(rmsep) <- c('EB','FIC','ML')
print(rmsep)
}
\references{
Gangsei, Almøy and Sæbø (2019). Linear Regression
 with Bivariate Response Variable Containing Missing Data.
 Strategies to Increase Prediction Precision.
}
\author{
Lars Erik Gangsei, Trygve Almøy and Solve Sæbø
}
